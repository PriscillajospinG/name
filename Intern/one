import os
import json

class ToDoListManager:
    def __init__(self, file_path="tasks.txt"):
        self.file_path = file_path
        self.tasks = []
        self.load_tasks()

    def load_tasks(self):
        if os.path.exists(self.file_path):
            with open(self.file_path, 'r') as file:
                tasks_data = json.load(file)
                self.tasks = [Task(**task) for task in tasks_data]

    def save_tasks(self):
        with open(self.file_path, 'w') as file:
            tasks_data = [task.__dict__ for task in self.tasks]
            json.dump(tasks_data, file)

    def add_task(self, description):
        task_id = len(self.tasks) + 1
        task = Task(task_id, description)
        self.tasks.append(task)
        self.save_tasks()

    def view_tasks(self):
        for task in self.tasks:
            print(task)

    def update_task(self, task_id, description):
        for task in self.tasks:
            if task.id == task_id:
                task.description = description
                self.save_tasks()
                return True
        return False

    def delete_task(self, task_id):
        self.tasks = [task for task in self.tasks if task.id != task_id]
        self.save_tasks()

    def mark_task_completed(self, task_id):
        for task in self.tasks:
            if task.id == task_id:
                task.completed = True
                self.save_tasks()
                return True
        return False
class Task:
    def __init__(self, id, description, completed=False):
        self.id = id
        self.description = description
        self.completed = completed

    def __str__(self):
        status = "Completed" if self.completed else "Pending"
        return f"[{self.id}] {self.description} - {status}"
def main():
    manager = ToDoListManager()

    while True:
        print("\nTo-Do List Application")
        print("1. Add Task")
        print("2. View Tasks")
        print("3. Update Task")
        print("4. Delete Task")
        print("5. Mark Task as Completed")
        print("6. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            description = input("Enter task description: ")
            manager.add_task(description)
        elif choice == '2':
            manager.view_tasks()
        elif choice == '3':
            task_id = int(input("Enter task ID to update: "))
            description = input("Enter new task description: ")
            if not manager.update_task(task_id, description):
                print("Task not found.")
        elif choice == '4':
            task_id = int(input("Enter task ID to delete: "))
            manager.delete_task(task_id)
        elif choice == '5':
            task_id = int(input("Enter task ID to mark as completed: "))
            if not manager.mark_task_completed(task_id):
                print("Task not found.")
        elif choice == '6':
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
